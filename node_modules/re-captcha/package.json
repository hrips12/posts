{
  "name": "re-captcha",
  "description": "Display and verify a Recaptcha captcha",
  "version": "0.0.3",
  "author": {
    "name": "Jackson Tian",
    "email": "shyvo1987@gmail.com"
  },
  "main": "./lib/recaptcha.js",
  "devDependencies": {
    "mocha": "*",
    "blanket": "~1.1.4",
    "travis-cov": "~0.2.4"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "readmeFilename": "README.md",
  "gitHead": "aec21c46b559ff0e4eae5119c63dd4ea19eb286a",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "make test-all",
    "blanket": {
      "pattern": "re-captcha/lib",
      "data-cover-flags": {
        "debug": false
      }
    },
    "travis-cov": {
      "threshold": 70
    }
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/JacksonTian/re-captcha.git"
  },
  "keywords": [
    "recaptcha"
  ],
  "license": "MIT",
  "readme": "re-captcha [![Build Status](https://secure.travis-ci.org/JacksonTian/re-captcha.png)](http://travis-ci.org/JacksonTian/re-captcha)\n======\n\nrecaptcha renders and verifies [Recaptcha](http://www.google.com/recaptcha) captchas.\n\n## Installation\n\nVia npm:\n\n```\nnpm install re-captcha\n```\n\n## Setup\n\nBefore you can use this module, you must visit http://www.google.com/recaptcha\nto request a public and private API key for your domain.\n\n## Customizing the Recaptcha\n\nSee these [instructions](http://code.google.com/apis/recaptcha/docs/customization.html)\nfor help customizing the look of Recaptcha.  In brief, you will need to add a\nstructure like the following before the form in your document:\n\n```\n<script>\n  var RecaptchaOptions = {\n   theme: 'clean',\n   lang: 'en'\n  };\n</script>\n```\n\n## Example Using Connect/Express\n\napp.js:\n\n```js\nvar express  = require('connect');\nvar Recaptcha = require('re-captcha');\n\nvar PUBLIC_KEY  = 'YOUR_PUBLIC_KEY';\nvar PRIVATE_KEY = 'YOUR_PRIVATE_KEY';\nvar recaptcha = new Recaptcha(PUBLIC_KEY, PRIVATE_KEY);\n\nvar app = connect();\napp.use(connect.bodyParser());\napp.get('/', function(req, res) {\n  res.render('index', {\n    layout: false,\n    locals: {\n      recaptcha_form: recaptcha.toHTML()\n    }\n  });\n});\n\napp.post('/', function(req, res) {\n  var data = {\n    remoteip:  req.connection.remoteAddress,\n    challenge: req.body.recaptcha_challenge_field,\n    response:  req.body.recaptcha_response_field\n  };\n\n  recaptcha.verify(data, function(err) {\n    if (err) {\n      // Redisplay the form.\n      res.render('form.html', {\n        layout: false,\n        locals: {\n          recaptcha_form: recaptcha.toHTML(err)\n        }\n      });\n    } else {\n      res.send('Recaptcha response valid.');\n    }\n  });\n});\n\nhttp.createServer(app).listen(3000);\n```\n\nviews/form.html:\n\n```html\n<form method=\"POST\" action=\".\">\n  <%-recaptcha_form%>\n  <input type=\"submit\">\n</form>\n```\n\nMake sure connect and EJS are installed, then:\n\n```bash\n$ node app.js\n```\n",
  "_id": "re-captcha@0.0.3",
  "dist": {
    "shasum": "a8376caf246eb3d1120217ab9fa3b672430a13df",
    "tarball": "http://registry.npmjs.org/re-captcha/-/re-captcha-0.0.3.tgz"
  },
  "_from": "re-captcha@",
  "_npmVersion": "1.2.18",
  "_npmUser": {
    "name": "jacksontian",
    "email": "shyvo1987@gmail.com"
  },
  "maintainers": [
    {
      "name": "jacksontian",
      "email": "shyvo1987@gmail.com"
    }
  ],
  "_shasum": "a8376caf246eb3d1120217ab9fa3b672430a13df",
  "_resolved": "https://registry.npmjs.org/re-captcha/-/re-captcha-0.0.3.tgz"
}
